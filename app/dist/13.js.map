{"version":3,"sources":["webpack:///./app/components/Login/Login.js","webpack:///./app/utils/nativeLauncher.js","webpack:///./app/components/Login/Login.scss"],"names":["FormItem","Form","Item","type","mapDispatchToProps","login","tryNativeLauncherProfiles","connect","state","authLoading","auth","loading","isAuthValid","tokenLoading","nativeLoading","props","fastLogin","setFastLogin","useState","nativeLauncherProfiles","setNativeLauncherProfiles","t","useTranslation","colors","setColors","store","get","theme","THEMES","default","update","setUpdate","useEffect","async","homedir","process","env","APPDATA","os","vanillaMCPath","path","join","fsa","pathExists","vnlJson","readJson","authenticationDatabase","selectedUser","clientToken","account","profile","profiles","displayName","err","log","error","OfficialLancherProfilesExists","then","v","catch","e","ipcRenderer","send","on","getFieldDecorator","form","className","styles","content","style","background","login_form","textAlign","fontSize","onSubmit","preventDefault","validateFields","values","username","password","remember","rules","required","message","initialValue","has","disabled","size","prefix","color","placeholder","addonAfter","to","pathname","modal","draggable","title","valuePropName","icon","htmlType","login_form_button","marginTop","onClick","fontStyle","textDecoration","position","bottom","right","marginRight","require","version","module","exports"],"mappings":"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","file":"13.js","sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { useTranslation } from 'react-i18next';\nimport { ipcRenderer } from 'electron';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Icon, Checkbox, Tooltip } from 'antd';\nimport log from 'electron-log';\nimport styles from './Login.scss';\nimport store from '../../localStore';\nimport OfficialLancherProfilesExists from '../../utils/nativeLauncher';\nimport * as AuthActions from '../../actions/auth';\nimport { THEMES } from '../../constants';\nimport shader from '../../utils/colors';\nimport background from '../../assets/images/login_background.jpg';\nimport { tryNativeLauncherProfiles, login } from '../../actions/auth';\n\ntype Props = {\n  form: any,\n  login: () => void,\n  tryNativeLauncherProfiles: () => void,\n  tokenLoading: boolean,\n  authLoading: boolean,\n  nativeLoading: boolean\n};\n\nconst FormItem = Form.Item;\n\n// This is awful but it gets the primary color in real time\n\nfunction Login(props) {\n  const [fastLogin, setFastLogin] = useState(true);\n  const [nativeLauncherProfiles, setNativeLauncherProfiles] = useState(false);\n  const { t } = useTranslation();\n  const [colors, setColors] = useState(\n    store.get('settings') ? store.get('settings').theme : THEMES.default\n  );\n\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    OfficialLancherProfilesExists()\n      .then(v => {\n        return setNativeLauncherProfiles(v);\n      })\n      .catch(e => log.error(e));\n    if (process.env.NODE_ENV !== 'development') {\n      ipcRenderer.send('check-for-updates');\n      ipcRenderer.on('update-available', () => {\n        setUpdate(true);\n      });\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        props.login(values.username, values.password, values.remember);\n      } else {\n        log.error(err);\n      }\n    });\n  };\n  const { getFieldDecorator } = props.form;\n\n  /* eslint-enable */\n  return (\n    <div>\n      <main\n        className={styles.content}\n        style={{\n          background: `linear-gradient( ${colors['secondary-color-2']}8A, ${\n            colors['secondary-color-2']\n            }8A), url(${background})`\n        }}\n      >\n        <div className={styles.login_form}>\n          <h1 style={{ textAlign: 'center', fontSize: 30 }}>{t('MojangLogin', 'Mojang Login')}</h1>\n          <Form onSubmit={handleSubmit}>\n            <FormItem>\n              {getFieldDecorator('username', {\n                rules: [\n                  { required: true, message: t('InputEmail', 'Please Input Your Email') }\n                ],\n                initialValue: store.has('lastUsername')\n                  ? store.get('lastUsername')\n                  : ''\n              })(\n                <Input\n                  disabled={\n                    props.tokenLoading ||\n                    props.nativeLoading ||\n                    props.authLoading\n                  }\n                  size=\"large\"\n                  prefix={\n                    <Icon\n                      type=\"user\"\n                      style={{ color: 'rgba(255,255,255,.8)' }}\n                    />\n                  }\n                  placeholder={t('Email', 'Email')}\n                />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [\n                  { required: true, message: t('InputPassword', 'Please Input Your Password') }\n                ]\n              })(\n                <Input\n                  size=\"large\"\n                  disabled={\n                    props.tokenLoading ||\n                    props.nativeLoading ||\n                    props.authLoading\n                  }\n                  prefix={\n                    <Icon\n                      type=\"lock\"\n                      style={{ color: 'rgba(255,255,255,.8)' }}\n                    />\n                  }\n                  addonAfter={\n                    <Link\n                      to={{\n                        pathname: '/loginHelperModal',\n                        state: { modal: true }\n                      }}\n                      draggable=\"false\"\n                    >\n                      <Tooltip title={t('NeedHelp', 'Need Help?')}>\n                        <Icon type=\"question\" />\n                      </Tooltip>\n                    </Link>\n                  }\n                  type=\"password\"\n                  placeholder={t('Password', 'Password')}\n                />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true\n              })(<Checkbox>{t('RememberMe', 'Remember Me')}</Checkbox>)}\n              <Button\n                icon=\"login\"\n                loading={props.authLoading}\n                disabled={props.tokenLoading || props.nativeLoading}\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className={styles.login_form_button}\n              >\n                {t('LogIn', 'Log In')}\n              </Button>\n            </FormItem>\n          </Form>\n          {nativeLauncherProfiles && (\n            <Button\n              icon=\"forward\"\n              loading={props.nativeLoading}\n              size=\"large\"\n              type=\"primary\"\n              className={styles.login_form_button}\n              style={{ marginTop: '30px' }}\n              onClick={() => props.tryNativeLauncherProfiles()}\n            >\n              <span>\n                {t('LoginAs', 'Login As')}{' '}\n                <span\n                  style={{ fontStyle: 'italic', textDecoration: 'underline' }}\n                >\n                  {nativeLauncherProfiles}\n                </span>\n              </span>\n            </Button>\n          )}\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            bottom: 40,\n            right: 40,\n            color: '#bdc3c7'\n          }}\n        >\n          {update && (\n            <Link to=\"/autoUpdate\">\n              <Button type=\"primary\" style={{ marginRight: 10 }}>\n                {t('UpdateAvailable', 'Update Available')}\n              </Button>\n            </Link>\n          )}\n          v{require('../../../package.json').version}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authLoading: state.auth.loading,\n    isAuthValid: state.auth.isAuthValid,\n    tokenLoading: state.auth.tokenLoading,\n    nativeLoading: state.auth.nativeLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  login,\n  tryNativeLauncherProfiles\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import path from 'path';\nimport fsa from 'fs-extra';\nimport os from 'os';\nimport log from 'electron-log';\n\nexport default async function OfficialLancherProfilesExists() {\n  const homedir = process.env.APPDATA || os.homedir();\n  const vanillaMCPath = path.join(homedir, '.minecraft');\n  if (await fsa.pathExists(vanillaMCPath)) {\n    try {\n      const vnlJson = await fsa.readJson(\n        path.join(vanillaMCPath, 'launcher_profiles.json')\n      );\n      if (\n        vnlJson.authenticationDatabase &&\n        vnlJson.selectedUser &&\n        vnlJson.clientToken\n      ) {\n        const { account, profile } = vnlJson.selectedUser;\n        return vnlJson.authenticationDatabase[account].profiles[profile]\n          .displayName;\n      }\n    } catch (err) {\n      log.error(err);\n    }\n  }\n  return false;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"_2lNi6RvnNuJ5qdnnOjPiQw\",\"login_form\":\"hwULpmqZB6hV1CkY3kbpX\",\"login_form_button\":\"_2PJWC_1aqhbHXH-zvFTmJh\",\"fastLoginIcon\":\"_21TjnEDWkzsI9x9MFHREf2\",\"fastLoginIconScale\":\"_1ve11L1BSK9onyYSPsvcKZ\"};"],"sourceRoot":""}