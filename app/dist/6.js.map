{"version":3,"sources":["webpack:///./app/components/CurseModpackExplorerModal/CurseModpackExplorerModal.js","webpack:///./app/hooks/cursemeta.js","webpack:///./app/components/CurseModpackExplorerModal/CurseModpackExplorerModal.scss"],"names":["x","y","rx","ry","width","height","Loader","speed","ariaLabel","primaryColor","secondaryColor","style","Array","Math","round","window","innerHeight","map","v","i","icon","faWindowClose","props","addonID","match","params","unMount","setUnMount","useState","response","setResponse","useEffect","getAddon","then","data","useGetAddon","description","getAddonDescription","useGetAddonDescription","Modal","history","header","title","backBtn","className","styles","closeBtn","maxWidth","container","overlay","src","attachments","url","placeholder","thumbnailUrl","loading","zIndex","position","left","top","objectFit","fontSize","textAlign","name","marginTop","display","justifyContent","numberToRoundedWord","downloadCount","authors","author","join","Date","latestFiles","fileDate","toLocaleDateString","day","month","year","ReactHtmlParser","module","exports"],"mappings":"wyCA2BI,UAAMA,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIC,MAAM,MAAMC,OAAO,OAb1D,MAAMC,EAAS,IACb,EAAC,IAAD,CACED,OAAO,OACPD,MAAM,OACNG,MAAO,GACPC,WAAW,EACXC,aAAa,2BACbC,eAAe,2BACfC,MAAO,CACLN,OAAQ,OACRD,MAAO,cATX,IAaG,IAAIQ,MAAMC,KAAKC,MAAMC,OAAOC,YAAc,MAAMC,IAAI,CAACC,EAAGC,IACvD,UAAMnB,EAAE,MAAMC,EAAO,GAAJkB,EAAS,IAAKjB,GAAG,IAAIC,GAAG,IAAIC,MAAM,MAAMC,OAAO,S,MAmB5D,EAAC,IAAD,CAAiBe,KAAMC,M,EAyEvB,EAACf,EAAD,IAvFKgB,cACb,MAAM,QAAEC,GAAYD,EAAME,MAAMC,QACzBC,EAASC,GAAcC,oBAAS,GACjCC,ECjCmBN,KACzB,MAAOM,EAAUC,GAAeF,mBAAS,MAIzC,OAHAG,oBAAU,KACRC,YAAST,GAASU,KAAKC,GAAQJ,EAAYI,KAC1C,IACIL,GD4BUM,CAAYZ,GACvBa,EC1B8Bb,KACpC,MAAOM,EAAUC,GAAeF,mBAAS,MAIzC,OAHAG,oBAAU,KACRM,YAAoBd,GAASU,KAAKC,GAAQJ,EAAYI,KACrD,IACIL,GDqBaS,CAAuBf,GAE3C,OACE,EAACgB,EAAA,EAAD,CACEC,QAASlB,EAAMkB,QACfd,QAASA,EACTe,OAAO,QACPC,MAAM,mBACNC,QACE,SAAKC,UAAWC,IAAOC,eAAvB,KAIFnC,MAAO,CAAEN,OAAQ,OAAQD,MAAO,OAAQ2C,SAAU,WAVpD,EAYGlB,GAAYO,EACX,SAAKQ,UAAWC,IAAOG,gBAAvB,EACE,SACErC,MAAO,CACLN,OAAQ,QAEVuC,UAAWC,IAAOI,cAJpB,EAME,EAAC,IAAD,CACEC,IAAKrB,EAASsB,YAAY,GAAGC,IAC7BC,YAAaxB,EAASsB,YAAY,GAAGG,mBAFvC,EAIG,CAACJ,EAAKK,IACL,SACE5C,MAAO,CACL6C,QAAS,EACTC,SAAU,QACVC,KAAM,EACNC,IAAK,EACLC,UAAW,QACXvD,OAAQ,OACRD,MAAO,QAET8C,IAAKA,MAKb,QACEvC,MAAO,CACL8C,SAAU,WACVE,KAAM,IACNE,SAAU,GACVzD,MAAO,OACP0D,UAAW,gBANf,EASGjC,EAASkC,MAEZ,UACEpD,MAAO,CACL8C,SAAU,WACVO,WAAY,IACZC,QAAS,OACTC,eAAgB,sBALpB,EAQE,mBAAOC,YAAoBtC,EAASuC,eAApC,cACA,yBACMvC,EAASwC,QAAQpD,IAAIqD,GAAUA,EAAOP,MAAMQ,KAAK,OAEvD,8BACW,IACR,IAAIC,KAAK3C,EAAS4C,YAAY,GAAGC,UAAUC,mBAC1C,QACA,CACEC,IAAK,UACLC,MAAO,OACPC,KAAM,cAKd,SAAKlC,UAAWC,IAAOT,kBAAvB,EACG2C,IAAgB3C,KAhEtB,K,4FEpDP4C,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,YAAc,0BAA0B,SAAW","file":"6.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ContentLoader from 'react-content-loader';\nimport axios from 'axios';\nimport { Button } from 'antd';\nimport log from 'electron-log';\nimport ReactHtmlParser from 'react-html-parser';\nimport ProgressiveImage from 'react-progressive-image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../Common/Modal/Modal';\nimport { numberToRoundedWord } from '../../utils/numbers';\nimport { useGetAddon, useGetAddonDescription } from '../../hooks/cursemeta';\nimport styles from './CurseModpackExplorerModal.scss';\n\nconst Loader = () => (\n  <ContentLoader\n    height=\"100%\"\n    width=\"100%\"\n    speed={0.6}\n    ariaLabel={false}\n    primaryColor=\"var(--secondary-color-2)\"\n    secondaryColor=\"var(--secondary-color-3)\"\n    style={{\n      height: '100%',\n      width: '100%'\n    }}\n  >\n    <rect x=\"25%\" y=\"50\" rx=\"0\" ry=\"0\" width=\"55%\" height=\"50\" />\n    {[...Array(Math.round(window.innerHeight / 95))].map((v, i) => (\n      <rect x=\"15%\" y={i * 50 + 120} rx=\"0\" ry=\"0\" width=\"75%\" height=\"30\" />\n    ))}\n  </ContentLoader>\n);\n\nexport default props => {\n  const { addonID } = props.match.params;\n  const [unMount, setUnMount] = useState(false);\n  const response = useGetAddon(addonID);\n  const description = useGetAddonDescription(addonID);\n\n  return (\n    <Modal\n      history={props.history}\n      unMount={unMount}\n      header=\"false\"\n      title=\"Modpack Explorer\"\n      backBtn={\n        <div className={styles.closeBtn}>\n          <FontAwesomeIcon icon={faWindowClose} />\n        </div>\n      }\n      style={{ height: '80vh', width: '80vw', maxWidth: 1000 }}\n    >\n      {response && description ? (\n        <div className={styles.container}>\n          <div\n            style={{\n              height: '100%'\n            }}\n            className={styles.overlay}\n          >\n            <ProgressiveImage\n              src={response.attachments[0].url}\n              placeholder={response.attachments[0].thumbnailUrl}\n            >\n              {(src, loading) => (\n                <img\n                  style={{\n                    zIndex: -1,\n                    position: 'fixed',\n                    left: 0,\n                    top: 0,\n                    objectFit: 'cover',\n                    height: '100%',\n                    width: '100%'\n                  }}\n                  src={src}\n                />\n              )}\n            </ProgressiveImage>\n          </div>\n          <h1\n            style={{\n              position: 'relative',\n              top: -150,\n              fontSize: 40,\n              width: '100%',\n              textAlign: 'center'\n            }}\n          >\n            {response.name}\n          </h1>\n          <span\n            style={{\n              position: 'relative',\n              marginTop: -140,\n              display: 'flex',\n              justifyContent: 'space-around'\n            }}\n          >\n            <span>{numberToRoundedWord(response.downloadCount)} downloads</span>\n            <span>\n              by {response.authors.map(author => author.name).join(', ')}\n            </span>\n            <span>\n              Updated:{' '}\n              {new Date(response.latestFiles[0].fileDate).toLocaleDateString(\n                'en-US',\n                {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n                }\n              )}\n            </span>\n          </span>\n          <div className={styles.description}>\n            {ReactHtmlParser(description)}\n          </div>\n        </div>\n      ) : (\n          <Loader />\n        )}\n    </Modal>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport log from 'electron-log';\nimport { getAddon, getAddonDescription } from '../utils/cursemeta';\n\nexport const useGetAddon = addonID => {\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    getAddon(addonID).then(data => setResponse(data));\n  }, []);\n  return response;\n};\n\nexport const useGetAddonDescription = addonID => {\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    getAddonDescription(addonID).then(data => setResponse(data));\n  }, []);\n  return response;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1rm8e1PDEERLIaGLsvhvvS\",\"overlay\":\"JLWeko1Q13S8eTLq-zhCS\",\"description\":\"_3JXnd6FZMfLNtCVv5hnuHz\",\"closeBtn\":\"_3c9sIG6DrrfkhFxtJnOaue\"};"],"sourceRoot":""}