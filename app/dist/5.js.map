{"version":3,"sources":["webpack:///./app/components/ConfirmDeleteModal/ConfirmDeleteModal.js","webpack:///./app/components/ConfirmDeleteModal/ConfirmDeleteModal.scss"],"names":["props","unMount","setUnMount","useState","deleting","setDeleting","name","type","match","params","history","title","style","height","width","className","styles","main","instanceName","buttons","disabled","onClick","async","fsa","remove","path","join","PACKS_PATH","SERVERS_PATH","message","success","err","error","log","deleteType","module","exports"],"mappings":"4mCA+CuD,WAhCxCA,cACb,MAAOC,EAASC,GAAcC,oBAAS,IAChCC,EAAUC,GAAeF,oBAAS,IACnC,KAAEG,EAAF,KAAQC,GAASP,EAAMQ,MAAMC,OAqBnC,OACE,EAAC,IAAD,CACEC,QAASV,EAAMU,QACfT,QAASA,EACTU,iBAA2B,aAATJ,EAAsB,WAAa,oBACrDK,MAAO,CAAEC,OAAQ,IAAKC,MAAO,WAJ/B,EAME,SAAKC,UAAWC,IAAOC,WAAvB,sDAEE,SAAKF,UAAWC,IAAOE,mBAAvB,EAAsClB,EAAMQ,MAAMC,OAAOH,MAF3D,kEAKA,SAAKS,UAAWC,IAAOG,cAAvB,EACE,EAAC,IAAD,CACEZ,KAAK,UACLa,SAAUhB,EACViB,QAAS,IAAMnB,GAAW,SAH5B,eAOA,UAAMmB,QAAS,IAvCFC,WACjB,IAAiB,IAAblB,EAGJ,IACEC,GAAY,SACNkB,IAAIC,OACRC,IAAKC,KAAc,aAATnB,EAAsBoB,IAAaC,IAActB,IAE7DuB,IAAQC,WAAoB,aAATvB,EAAsB,WAAa,oBACtD,MAAOwB,GACP1B,GAAY,GACZwB,IAAQG,wBAAwB1B,KAChC2B,IAAID,MAAMD,GATZ,QAWE7B,GAAW,KAwBYgC,SAArB,qB,8EC1DRC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,aAAe,yBAAyB,QAAU","file":"5.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { message, Button } from 'antd';\nimport path from 'path';\nimport log from 'electron-log';\nimport { Link } from 'react-router-dom';\nimport { go } from 'connected-react-router';\nimport fs from 'fs';\nimport fsa from 'fs-extra';\nimport { promisify } from 'util';\nimport styles from './ConfirmDeleteModal.scss';\nimport Modal from '../Common/Modal/Modal';\nimport { PACKS_PATH, SERVERS_PATH } from '../../constants';\n\ntype Props = {};\n\nexport default props => {\n  const [unMount, setUnMount] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const { name, type } = props.match.params;\n\n  const deleteType = async () => {\n    if (deleting === true) {\n      return;\n    }\n    try {\n      setDeleting(true);\n      await fsa.remove(\n        path.join(type === 'instance' ? PACKS_PATH : SERVERS_PATH, name)\n      );\n      message.success(`${type === 'instance' ? 'Instance' : 'Server'} deleted`);\n    } catch (err) {\n      setDeleting(false);\n      message.error(`Error deleting ${name}`);\n      log.error(err);\n    } finally {\n      setUnMount(true);\n    }\n  };\n\n  return (\n    <Modal\n      history={props.history}\n      unMount={unMount}\n      title={`Confirm ${type === 'instance' ? 'Instance' : 'Server'} Deletion`}\n      style={{ height: 210, width: 400 }}\n    >\n      <div className={styles.main}>\n        Are you sure you want to delete the following? <br />\n        <div className={styles.instanceName}>{props.match.params.name}</div>\n        This cannot be undone and you will lose everything you've done\n      </div>\n      <div className={styles.buttons}>\n        <Button\n          type=\"primary\"\n          disabled={deleting}\n          onClick={() => setUnMount(true)}\n        >\n          No, Abort\n        </Button>\n        <span onClick={() => deleteType()}>Yes, Delete</span>\n      </div>\n    </Modal>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_3DN05yRVhjew-LSBDbo_d4\",\"instanceName\":\"_8KTeNKUYnxWFOoW7hTtOO\",\"buttons\":\"_17pjmVY87yXdy7TbkaYoX8\"};"],"sourceRoot":""}