{"version":3,"sources":["webpack:///./app/components/ImportPack/ImportPack.js","webpack:///./app/components/ImportPack/ImportPack.scss"],"names":["FormItem","Form","Item","Option","value","mapDispatchToProps","importTwitchProfile","connect","create","props","form","getFieldDecorator","unMount","setUnMount","useState","loading","setLoading","filePath","setFilePath","packType","setPackType","history","title","style","height","width","layout","className","styles","container","onSubmit","e","preventDefault","validateFields","async","err","values","message","warning","name","packName","path","parse","basename","promisify","fs","access","join","PACKS_PATH","error","margin","rules","required","pattern","RegExp","autoFocus","size","display","prefix","type","theme","color","placeholder","justifyContent","paddingLeft","marginLeft","defaultValue","onClick","remote","dialog","showOpenDialog","filters","extensions","properties","paths","length","substr","createInstance","icon","htmlType","module","exports"],"mappings":"w0CAkBA,MAAMA,EAAWC,IAAKC,K,MA0GR,EAAC,IAAOC,OAAR,CAA4BC,MAAM,UAAf,SAAnB,UAxGd,MAqIMC,EAAqB,CACzBC,2CAGaC,sBACb,KACAF,EAFaE,CAGbN,IAAKO,QAALP,CA5IiBQ,IACjB,MAAM,KAAEC,GAASD,GACX,kBAAEE,GAAsBD,GACvBE,EAASC,GAAcC,oBAAS,IAChCC,EAASC,GAAcF,oBAAS,IAChCG,EAAUC,GAAeJ,mBAAS,OAClCK,EAAUC,GAAeN,mBAAS,UAoCzC,OACE,EAAC,IAAD,CACEO,QAASZ,EAAMY,QACfT,QAASA,EACTU,MAAM,cACNC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,WAJ/B,EAME,EAAC,IAAD,CACEC,OAAO,SACPC,UAAWC,IAAOC,UAClBC,SA5CeC,IACnBA,EAAEC,iBACFtB,EAAKuB,eAAeC,MAAOC,EAAKC,KAC9B,IAAKD,EAAK,CACR,IAAKlB,EAEH,YADAoB,IAAQC,QAAQ,6BAGlB,MAAMC,EAAOH,EAAOI,UAAYC,IAAKC,MAAMD,IAAKE,SAAS1B,IAAWsB,KAEpE,UACQK,oBAAUC,IAAGC,OAAbF,CAAqBH,IAAKM,KAAKC,IAAYT,IACjDF,IAAQC,QAAQ,8CAChB,MAAOW,GACPjC,GAAW,SACLP,EAAMH,oBAAoBiC,EAAMtB,GACtCJ,GAAW,cAyBf,EAKE,kBACE,EAACb,EAAD,CAAUuB,MAAO,CAAE2B,OAAQ,EAAGzB,MAAO,WAArC,EACGd,EAAkB,WAAY,CAC7BwC,MAAO,CACL,CACEC,UAAU,EACVf,QACE,0DACFgB,QAAS,IAAIC,OAAO,2CANzB3C,CAUC,EAAC,IAAD,CACE4C,WAAS,EACTC,KAAK,QACLjC,MAAO,CACLE,MAAO,IACPgC,QAAS,eACTjC,OAAQ,IAEVkC,OACE,EAAC,IAAD,CACEC,KAAK,cACLC,MAAM,SACNrC,MAAO,CAAEsC,MAAO,0BAGpBC,YACE7C,EACIwB,IAAKC,MAAMD,IAAKE,SAAS1B,IAAWsB,KACpC,qBAMd,SACEhB,MAAO,CACLE,MAAO,IACPyB,OAAQ,GACRO,QAAS,OACTM,eAAgB,uBALpB,EAQE,UAAMxC,MAAO,CAAEyC,YAAa,SAA5B,cAEE,EAAC,IAAD,CACEzC,MAAO,CAAEE,MAAO,IAAKwC,WAAY,IACjCC,aAAa,eAFf,MASF,EAAC,IAAD,CAAQP,KAAK,UAAUQ,QA/ER,KACrBC,SAAOC,OAAOC,eACZ,CACEC,QAAS,CAAC,CAAEhC,KAAM,aAAciC,WAAY,CAAC,SAC7CC,WAAY,CAAC,aAEfC,IACExD,EAAYwD,EAAM,aAwEhB,EACgB,OAAbzD,EACG,aACAwB,IAAKE,SAAS1B,GAAU0D,QAAU,MAC/BlC,IAAKE,SAAS1B,GAAU2D,OAAO,EAAG,SACrCnC,IAAKE,SAAS1B,KAGtB,SAAKU,UAAWC,IAAOiD,qBAAvB,EACE,EAAC,IAAD,CACEC,KAAK,OACL/D,QAASA,EACTyC,KAAK,QACLG,KAAK,UACLoB,SAAS,eALX,wB,8DCzIVC,EAAOC,QAAU,CAAC,UAAY,wBAAwB,eAAiB","file":"9.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { remote } from 'electron';\nimport { message, Form, Input, Icon, Button, Select } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport path from 'path';\nimport fs from 'fs';\nimport { promisify } from 'util';\nimport { PACKS_PATH } from '../../constants';\nimport styles from './ImportPack.scss';\nimport Modal from '../Common/Modal/Modal';\nimport { importTwitchProfile } from '../../actions/downloadManager';\n\ntype Props = {\n  forgeManifest: Array,\n  versionsManifest: Array\n};\nconst FormItem = Form.Item;\n\nconst ImportPack = props => {\n  const { form } = props;\n  const { getFieldDecorator } = form;\n  const [unMount, setUnMount] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [filePath, setFilePath] = useState(null);\n  const [packType, setPackType] = useState('Twitch');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        if (!filePath) {\n          message.warning('Please select a zip file.');\n          return;\n        }\n        const name = values.packName || path.parse(path.basename(filePath)).name;\n\n        try {\n          await promisify(fs.access)(path.join(PACKS_PATH, name));\n          message.warning('An instance with this name already exists.');\n        } catch (error) {\n          setLoading(true);\n          await props.importTwitchProfile(name, filePath);\n          setUnMount(true);\n        }\n      }\n    });\n  };\n\n  const showFileDialog = () => {\n    remote.dialog.showOpenDialog(\n      {\n        filters: [{ name: 'Twitch Zip', extensions: ['zip'] }],\n        properties: ['openFile']\n      },\n      paths => {\n        setFilePath(paths[0]);\n      }\n    );\n  };\n\n  return (\n    <Modal\n      history={props.history}\n      unMount={unMount}\n      title=\"Import Pack\"\n      style={{ height: 330, width: 540 }}\n    >\n      <Form\n        layout=\"inline\"\n        className={styles.container}\n        onSubmit={handleSubmit}\n      >\n        <div>\n          <FormItem style={{ margin: 0, width: 450 }}>\n            {getFieldDecorator('packName', {\n              rules: [\n                {\n                  required: false,\n                  message:\n                    'Please input a valid name with just numbers and letters',\n                  pattern: new RegExp('^[a-zA-Z0-9_.-]+( [a-zA-Z0-9_.-]+)*$')\n                }\n              ]\n            })(\n              <Input\n                autoFocus\n                size=\"large\"\n                style={{\n                  width: 450,\n                  display: 'inline-block',\n                  height: 60\n                }}\n                prefix={\n                  <Icon\n                    type=\"play-circle\"\n                    theme=\"filled\"\n                    style={{ color: 'rgba(255,255,255,.8)' }}\n                  />\n                }\n                placeholder={\n                  filePath\n                    ? path.parse(path.basename(filePath)).name\n                    : 'Instance Name'\n                }\n              />\n            )}\n          </FormItem>\n        </div>\n        <div\n          style={{\n            width: 450,\n            margin: 20,\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}\n        >\n          <span style={{ paddingLeft: 5 }}>\n            Zip Type:\n            <Select\n              style={{ width: 130, marginLeft: 20 }}\n              defaultValue=\"Twitch\"\n            >\n              <Select.Option key=\"Twitch\" value=\"Twitch\">\n                Twitch\n              </Select.Option>\n            </Select>\n          </span>\n          <Button type=\"primary\" onClick={showFileDialog}>\n            {filePath === null\n              ? 'Select Zip'\n              : path.basename(filePath).length >= 24\n              ? `${path.basename(filePath).substr(0, 24)}...`\n              : path.basename(filePath)}\n          </Button>\n        </div>\n        <div className={styles.createInstance}>\n          <Button\n            icon=\"plus\"\n            loading={loading}\n            size=\"large\"\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Import Pack\n          </Button>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapDispatchToProps = {\n  importTwitchProfile\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Form.create()(ImportPack));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"hHtRgC579ZTStESOi_Iu2\",\"createInstance\":\"_1r2Ts26QVkLnkhEbz4vB3y\"};"],"sourceRoot":""}