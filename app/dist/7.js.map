{"version":3,"sources":["webpack:///./app/components/CurseModpacksBrowserCreatorModal/CurseModpackBrowserCreatorModal.scss","webpack:///./app/components/CurseModpacksBrowserCreatorModal/CurseModpacksBrowserCreatorModal.js"],"names":["module","exports","FormItem","Form","Item","mapDispatchToProps","addCursePackToQueue","connect","create","props","forgeManifest","versionsManifest","match","form","getFieldDecorator","addonID","params","versions","setVersions","useState","unMount","setUnMount","loading","setLoading","loadingBtn","setLoadingBtn","instanceName","setInstanceName","useEffect","async","files","addon","Promise","all","getAddonFiles","getAddon","name","getModPackData","history","title","style","height","width","layout","className","styles","container","onSubmit","e","preventDefault","validateFields","err","values","undefined","packName","replace","promisify","fs","access","path","join","PACKS_PATH","message","warning","error","version","setTimeout","push","margin","rules","pattern","RegExp","autoFocus","size","display","prefix","type","theme","color","placeholder","marginTop","required","map","Option","id","fileName","createInstance","icon","htmlType"],"mappings":"kKACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,4B,s3CCiBzE,MAAMC,EAAWC,IAAKC,KAkIhBC,EAAqB,CACzBC,2CAGaC,sBACb,KACAF,EAFaE,CAGbJ,IAAKK,QAALL,CAvIsCM,IACtC,MAAM,cAAEC,EAAF,iBAAiBC,EAAjB,MAAmCC,EAAnC,KAA0CC,GAASJ,GACnD,kBAAEK,GAAsBD,GACxB,QAAEE,GAAYH,EAAMI,QACnBC,EAAUC,GAAeC,mBAAS,KAClCC,EAASC,GAAcF,oBAAS,IAChCG,EAASC,GAAcJ,oBAAS,IAChCK,EAAYC,GAAiBN,oBAAS,IACtCO,EAAcC,GAAmBR,mBAAS,IAUjDS,oBAAU,KARaC,WACrB,MAAOC,EAAOC,SAAeC,QAAQC,IAAI,CAACC,YAAcnB,GAAUoB,YAASpB,KAE3EY,EAAgBI,EAAMK,MACtBlB,EAAYY,GACZP,GAAW,IAIXc,IACC,IAyBH,OACE,EAAC,IAAD,CACEC,QAAS7B,EAAM6B,QACflB,QAASA,EACTmB,MAAM,sBACNC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,WAJ/B,EAME,EAAC,IAAD,CACEC,OAAO,SACPC,UAAWC,IAAOC,UAClBC,SAjCeC,IACnBA,EAAEC,iBACFpC,EAAKqC,eAAerB,MAAOsB,EAAKC,KAC9B,IAAKD,EAAK,CACR,MAAMf,OACgBiB,IAApBD,EAAOE,SACHF,EAAOE,SACP5B,EAAa6B,QAAQ,MAAO,IAClC,UACQC,oBAAUC,IAAGC,OAAbF,CAAqBG,IAAKC,KAAKC,IAAYzB,IACjD0B,IAAQC,QAAQ,8CAChB,MAAOC,GACPvC,GAAc,SACRhB,EAAMH,oBAAoB8B,EAAMrB,EAASqC,EAAOa,SACtD5C,GAAW,GACX6C,WAAW,KACTzD,EAAM6B,QAAQ6B,KAAK,cAClB,gBAaP,EAKE,kBACE,EAACjE,EAAD,CAAUsC,MAAO,CAAE4B,OAAQ,SAA3B,EACGtD,EAAkB,WAAY,CAC7BuD,MAAO,CACL,CACEP,QACE,0DACFQ,QAAS,IAAIC,OAAO,2CALzBzD,CASC,EAAC,IAAD,CACE0D,WAAS,EACTC,KAAK,QACLjC,MAAO,CACLE,MAAO,IACPgC,QAAS,eACTjC,OAAQ,QAEVkC,OACE,EAAC,IAAD,CACEC,KAAK,cACLC,MAAM,SACNrC,MAAO,CAAEsC,MAAO,0BAGpBC,YACmB,KAAjBrD,EACIA,EAAa6B,QAAQ,MAAO,IAC5B,kBAMd,SAAKf,MAAO,CAAEwC,UAAW,cAAzB,EACE,EAAC9E,EAAD,UACGY,EAAkB,UAAW,CAC5BuD,MAAO,CAAC,CAAEY,UAAU,EAAMnB,QAAS,6BADpChD,CAGC,EAAC,IAAD,CACE2D,KAAK,QACLjC,MAAO,CAAEE,MAAO,IAAKgC,QAAS,gBAC9BK,YAAY,mBACZzD,QAASA,QAJX,EAMGL,EAASiE,IAAInD,GACZ,EAAC,IAAOoD,OAAR,GAAoBpD,EAAMqD,GACvBrD,EAAMsD,SAAS9B,QAAQ,OAAQ,UAO5C,SAAKX,UAAWC,IAAOyC,qBAAvB,EACE,EAAC,IAAD,CACEC,KAAK,OACLd,KAAK,QACLG,KAAK,UACLY,SAAS,SACTlE,QAASE,QALX","file":"7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_38QaG9ARy7RwB6DNC4FzQZ\",\"createInstance\":\"_2BzYX3G2zY3E7TeQsAtyLZ\"};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { message, Form, Input, Icon, Button, Select } from 'antd';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport path from 'path';\nimport fs from 'fs';\nimport { promisify } from 'util';\nimport { PACKS_PATH } from '../../constants';\nimport styles from './CurseModpackBrowserCreatorModal.scss';\nimport Modal from '../Common/Modal/Modal';\nimport { addCursePackToQueue } from '../../actions/downloadManager';\nimport { getAddonFiles, getAddon } from '../../utils/cursemeta';\n\ntype Props = {\n  forgeManifest: Array,\n  versionsManifest: Array\n};\nconst FormItem = Form.Item;\n\nconst CurseModpackBrowserCreatorModal = props => {\n  const { forgeManifest, versionsManifest, match, form } = props;\n  const { getFieldDecorator } = form;\n  const { addonID } = match.params;\n  const [versions, setVersions] = useState([]);\n  const [unMount, setUnMount] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [instanceName, setInstanceName] = useState('');\n\n  const getModPackData = async () => {\n    const [files, addon] = await Promise.all([getAddonFiles(addonID), getAddon(addonID)])\n\n    setInstanceName(addon.name);\n    setVersions(files);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getModPackData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        const name =\n          values.packName !== undefined\n            ? values.packName\n            : instanceName.replace(/\\W/g, '');\n        try {\n          await promisify(fs.access)(path.join(PACKS_PATH, name));\n          message.warning('An instance with this name already exists.');\n        } catch (error) {\n          setLoadingBtn(true);\n          await props.addCursePackToQueue(name, addonID, values.version);\n          setUnMount(true);\n          setTimeout(() => {\n            props.history.push('/dmanager');\n          }, 210);\n        }\n      }\n    });\n  };\n\n  return (\n    <Modal\n      history={props.history}\n      unMount={unMount}\n      title=\"Create New Instance\"\n      style={{ height: 330, width: 540 }}\n    >\n      <Form\n        layout=\"inline\"\n        className={styles.container}\n        onSubmit={handleSubmit}\n      >\n        <div>\n          <FormItem style={{ margin: 0 }}>\n            {getFieldDecorator('packName', {\n              rules: [\n                {\n                  message:\n                    'Please input a valid name with just numbers and letters',\n                  pattern: new RegExp('^[a-zA-Z0-9_.-]+( [a-zA-Z0-9_.-]+)*$')\n                }\n              ]\n            })(\n              <Input\n                autoFocus\n                size=\"large\"\n                style={{\n                  width: 450,\n                  display: 'inline-block',\n                  height: '60px'\n                }}\n                prefix={\n                  <Icon\n                    type=\"play-circle\"\n                    theme=\"filled\"\n                    style={{ color: 'rgba(255,255,255,.8)' }}\n                  />\n                }\n                placeholder={\n                  instanceName !== ''\n                    ? instanceName.replace(/\\W/g, '')\n                    : 'Loading...'\n                }\n              />\n            )}\n          </FormItem>\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <FormItem>\n            {getFieldDecorator('version', {\n              rules: [{ required: true, message: 'Please select a version' }]\n            })(\n              <Select\n                size=\"large\"\n                style={{ width: 335, display: 'inline-block' }}\n                placeholder=\"Select a version\"\n                loading={loading}\n              >\n                {versions.map(addon => (\n                  <Select.Option key={addon.id}>\n                    {addon.fileName.replace('.zip', '')}\n                  </Select.Option>\n                ))}\n              </Select>\n            )}\n          </FormItem>\n        </div>\n        <div className={styles.createInstance}>\n          <Button\n            icon=\"plus\"\n            size=\"large\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            loading={loadingBtn}\n          >\n            Create Instance\n          </Button>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nconst mapDispatchToProps = {\n  addCursePackToQueue\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Form.create()(CurseModpackBrowserCreatorModal));\n"],"sourceRoot":""}